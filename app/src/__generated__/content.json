[
  {
    "title": "Nothing from me. Skip this one?",
    "slug": "nothing-from-me",
    "topics": [
      {
        "name": "Don't ever miss a 1-on-1",
        "path": "/nothing-from-me/dont-ever-skip",
        "md": "A 10-minute call might be all we need; but really **let's not ever skip** 1-on-1s, especially when we're working remotely.\n\nIt's fairly standard to start out with weekly 1-on-1s (of maybe 45 minutes), then maybe switch to every other week if the team & work is stable and humming along nicely. It helps if we pick a time that's a natural break: near lunch or after stand-up, maybe.\n\nLess frequently than that is risky, though it doesn't _feel_ like a risk.\n\nBut everyone thinks differently, and we can be taken by surprise that someone has been struggling, but didn't think to say anything.\n\n## What about evaluation?\n\nIf part of your job is judging their performance, how do you do that (specifically)?\n\n**When** do you do it?\n\nThink about it at least a little before every 1-on-1, because it's **so much** easier to work with a problem when it's minor and you have time.\n\nIf you don't notice it for months, until it's a serious problem and affecting many other people... you might cost someone their job and cause a lot of unnecessary pain.\n\n## And what about appreciation?\n\nEvaluation is about showing them where they are. If they're doing great, what specifically are they doing, and what's great about it?\n"
      },
      {
        "name": "I'm unsure how your work is going",
        "path": "/nothing-from-me/dont-know-status",
        "md": "1-on-1 calls are not for work status updates.\n\nThey **are** a fine time for us to brainstorm on how to improve our process, though!\n\nLet's talk about the goals of sharing status, and then figure out the most comfortable way to do that, for you & me in particular.\n\nLots of our work naturally involves writing things down; that helps. More time (and focus) spent on extra documentation _just_ to share status is tedious.\n\nCheck who's using that info (and what do they do with it?) so we aren't wasting time on unpleasant tasks.\n\n> Product needs some sense of how it's going, because if they're thinking \"quick tweak\" and it's turning into \"tear this apart & rebuild\" they need to re-evaluate. But they don't need details if all is well.\n>\n> For simple stuff we all understand, the rest of us on the team don't need much, really beyond ticket status, really, assuming you're pairing on & off.\n>\n> Mostly we want to catch each other if we're overlapping (but not pairing), if we hit unexpected problems, or if we're changing the platform.\n>\n> Let's take an example and figure out how that can work.\n"
      },
      {
        "name": "You know all this better than I do",
        "path": "/nothing-from-me/nothing-to-teach-you",
        "md": "It can feel risky at first to \"manage\" someone who's more experienced than I am, or who is already doing all the things I might coach them on.\n\nCan I support someone doing something I've never done?\n\nCan I help them get to a career stage I've not been to, personally?\n\n## Actually: yes\n\nAs usual: just find a way to talk about this directly... especially because a manager absolutely **can** sabotage an experienced IC; it's crucial to avoid \"boss\" mode and focus on collaboration & support.\n\nIt's surprisingly useful to:\n\n- take notes & map out their plans\n- let them pick the next concrete steps\n- review & update notes & actions periodically\n- unblock when needed\n\nPlus, the fact that they **can** do something does not mean they should.\n\n- collect and share context (including appreciation & worries) from other parts of the company they might not have seen\n- learn how they work, and protect their focus time & flow\n- remind them to (& make sure they can) carve out time to focus on non-urgent but important thinking time & projects\n\n> One service I offer is just keeping track of your longer-term goals, and trying to make sure you're unblocked.\n>\n> Does that sounds useful? We can literally just make a list of what you see ahead, for your career, your work here, the team;\n> and then just track these over time.\n\n## More eyes make bugs shallow (including planning bugs)\n\nWe all have blind spots, also. An experienced IC (and often less-experienced ICs) will often have valuable insight into anything we're trying to do with the team & project; and we can likewise sometimes help them catch a gap in their own plans or priorities.\n"
      },
      {
        "name": "Have we traded feedback recently?",
        "path": "/nothing-from-me/trading-feedback",
        "md": "Safe, non-urgent feedback on things we've noticed _before_ there's any real problem is really valuable.\n\nIt creates the habit of sharing & tuning how we work & interact, collaboratively.\n\nIt also helps correct bad interpretations early (and no one is perfect at guessing others' motivations).\n\n## Don't forget to _get_ feedback, too\n\n> So... got any awkward feedback for me, since last time?\n>\n> It's okay if it might not be really fixable, or it's minor; at least then I'll know.  \n> You might save me some real trouble and help me correct something early.\n\nAnother angle:\n\n> We talk about lots of different things; basically I'm guessing about what'll be useful to you.\n>\n> I'll definitely guess wrongly sometimes, though.\n>\n> If I know about what times you're just thinking \"I hope this wraps up soon, because I have stuff to do\" then I'll absolutely shift the focus into better directions.\n\n## And don't forget positive feedback!\n\nIt's hugely useful to wrap up 1-on-1s once a month or so by taking notes together on what they've accomplished & learned; collect the stats & make it really clear what the benefit was.\n\nSome progress is also team-wide, not just individual; also worth tracking.\n"
      }
    ]
  },
  {
    "title": "Everything is fine (really)",
    "slug": "fine-really",
    "topics": [
      {
        "name": "Log accomplishments & learnings",
        "path": "/fine-really/accomplishments-and-learnings",
        "md": "> I'm really happy with how everything's going; both what you're building and the human side.\n> What's your sense of it?\n>\n> Are you keeping track anywhere of your wins? If you want, we can write out some notes today.\n>\n> It's really useful to be able to look back after a year or so and see what we've done,\n> both what we've created & problems solved, but what new things we're capable of.\n\nI share running notes from 1-on-1s; it works to just drop in an accomplishments section every month or two.\n\nData-focused is ideal (some way to measure the value), but not required.\n\nIt serves both of us:\n\n- They can confirm & review what they're learning & achieving here, and update their resume now & then\n- For a performance review or promotion doc, it's **really easy** to scan through these.\n"
      },
      {
        "name": "How likely are you to quit?",
        "path": "/fine-really/how-likely-to-quit",
        "md": "It's common to **not** tell your manager or lead that you're looking for other jobs.\n\n## Should I ask? Not ask?\n\nDefinitely can't force it; that's okay. Still... if I _know_ a dev is likely to leave soon, it would be so useful...\nHiring & on-boarding a replacement can definitely take longer than their notice period; they could double-down on mentoring now, etc..\n\nBut it's a risk for them to share. Suppose they don't find any great options and stay... but I've just picked someone else to lead something new & exciting?\n\nThe best I can do is to make it **valuable** to be open with me.\n\nThis might mean:\n\n1. I can be a strong reference, and can also look for opportunities in my networks\n1. I can help you weigh what's important; compensation vs. mission vs. autonomy vs. work-life integration vs. ...\n1. I can help optimize your CV (logging wins is already helping)\n1. I can be open about upcoming plans & possibilities internally (and whatever decisions we're making that involve you)\n1. We can coordinate a smooth handover\n1. And no bridges will be burned; it leaves the door open for you to come back, if that's a good option sometime\n\n> I'm really happy with the work you've been doing; and it feels like you're pretty well-placed here for this stage in your career.\n>\n> But listen: I know opportunities can come up, and there may be things you're hunting for that we just can't provide. If you can keep me somewhat in the loop, there's a lot I can do to help out, and it'd make that an easier transition.\n>\n> Also, if you're not looking yet but getting that feeling... let me know. We get wrapped up in everything; if I'm guessing wrong about how you're doing, I won't do stuff I **could** do to help.\n\n## Share context\n\nOne of the reasons people leave is because they don't realize what they're taking for granted, or what's coming up that'll be specifically valuable for them.\n\nThere may also be much more flexibility than they realize; there can be new teams being created soon, new projects coming up, and even roadmap changes that are possible **simply because** enough people want to work on a particular technology or type of project, and it's possible to find the overlap between those interests & the company mission.\n"
      },
      {
        "name": "Step back & talk about career paths",
        "path": "/fine-really/long-term-view-career",
        "md": "Do we have a documented career ladder for the org?\n\nIf not, let's talk about shared ones, like [progression.fyi](https://www.progression.fyi) or [career-ladders.dev](https://career-ladders.dev), as part of finding out what skills you want to develop, and how.\n\nEveryone has different strengths; we want to make sure baseline skills (especially around working effectively with the team & company) are solid, but also make sure you're getting to do things that let you use and build on your strengths.\n\n> Are any of these things intimidating, and we can run some experiments in that direction to start learning the territory?\n>\n> In a given week, what are the moments you most enjoy & feel like you're really in the zone? What are the hardest moments, or where you feel lost or unsure?\n>\n> Another way to think of it: there's a sweet spot in between \"fully comfortable\" and \"in over my head\" where you are fully engaged and actively sharpening your skills. You need to take some risks to get there, but you knmow it when you're there. What blocks you from getting here, now?\n\n## I want to do things we aren't doing here...\n\nTech you want to explore that we aren't using? Skills that aren't really relevant to our roadmap?\n\nDo you want to try leading a team, and you're ready to do that, but we're not starting new teams now?\n\nIt's good to find out, and sometimes it can make sense to help someone jump to another part of the org, or even leave the company on good terms.\n\nIf I know about it, we can plan a smart transition. If I don't have a clue, it's more chaotic (but not a disaster, to be honest).\n"
      },
      {
        "name": "What's happening outside our project & team?",
        "path": "/fine-really/long-term-view-company",
        "md": "There should be other ways that we're all connected to the rest of the company, not via 1-on-1s.\n\nBut do you have sensitive questions that no one is answering? (like: how stable are we financially? What happens, really, if this project fails or takes an extra 3 weeks?)\n\nIdeas that no one else is talking about? Let's figure out how & where you can raise those.\n\nThe higher the autonomy of a team and its engineers, the more they will need to understand:\n\n* the value of their work, and how that is measured\n* company strategy and how their work fits in\n* the process of setting priorities and evaluating the team's work\n\nIt's fairly healthy if they are a little uneasy wondering if the team is working on the right things,\nand want more insights into:\n\n* how sales & support are talking about their work\n* what users are happy about or frustrated by (or not even discovering)\n* updates from leadership\n\nIt's the responsibility of product managers, engineering managers, and higher leadership to bring that context\n(and coordinate with engineers to improve analytics & observability where needed).\n"
      }
    ]
  },
  {
    "title": "This is fine (on fire)",
    "slug": "fine-on-fire",
    "topics": [
      {
        "name": "We are all burning out!",
        "path": "/fine-on-fire/all-burning-out",
        "md": "Everyone is working way too many hours, because we worry the company won't survive if we don't deliver.\n\nMaybe... we **did** deliver, sort of, and since then we've been battling on but half-drowning in the bugs, the performance issues, the instability.\n\nA blame-focused work culture, poor communication and wasted work or resources all make it worse.\n\n## What's going to happen?\n\nSome devs will leave on their own (often: the highly-skilled & extroverted; they have friends asking them why they're putting up with a death march).\n\nOthers will stay, in spite of the damage it's doing, because they fear failure or \"giving up\", they don't want to abandon the team, they think there will one day be rewards to match the pain and effort; or other reasons.\n\nBut overwork sabotages mental & physical health. Personal life & relationships suffer. People's careers can stall completely, or if they're still learning, it's by grueling trial & error with little time to reflect... the slowest way.\n\nAt some point, the damage will overwhelm their ability to work at all, and recovery may take months or years.\n\n## How do we talk about it?\n\n1. Define a practical healthy working environment as a reference (mental well-being, flexibility, high-quality work & collaboration, carefully-managed complexity & technical debt), and highlight what we _do_ have vs. where we're currently falling short.\n1. Get updates: how often working into the night, how often upset about work, how often work demands are clashing with life outside of work. **We don't need details**, especially if trust is low! Just a sense of e.g. how this week compares to last week, and if there are particular things happening that make it worse.\n1. Talk about and get input on long-term fixes. How aware is leadership of what's happening? Share what you've said & heard.\n\n> We have a lot to fix, long-term, but... what _small_ change would make your life just a little bit better, that we can try right now?  \n> Even freeing you from 10 minutes of annoyance gives you 10 minutes to think clearly about larger strategy...\n>\n> Let's assign tasks - I'll do X, you do Y; and we'll review results on the 20th.\n"
      },
      {
        "name": "Evaluation works like this, but I don't like it",
        "path": "/fine-on-fire/eval-works-like-this",
        "md": "Engineering managers don't just decide on their own how to evaluate the team.\n\nThere's a system (maybe unwritten, or only partly documented) around performance, and how eval works.\n\nThe most important part in a 1-on-1 is to _expose_ how eval works (and how it's going), not just give our own opinions.\n\nIf a team member is doing valuable, challenging work e.g. mentoring or building cross-team bridges, but a VP swoops in with \"I just checked X's commit history... this is unacceptable; they aren't contributing enough\", then that's pretty bad. If a good eval, here, means a steady stream of commits, then as a manager, I'm harming the team member if they don't know that.\n\n> Listen, I think your work last week was more valuable than picking up more tickets & working solo.\n>\n> I'm worried that it's a risk for evals. Y mostly focuses on dev progress, so they tend to want evals to focus on completing tickets & commit stats.\n>\n> Actually, brainstorm with me for a minute on this? I can push for a better eval process, but to do that, I should be really clear on what our current system is discouraging.\n"
      },
      {
        "name": "They have feedback, but I don't agree",
        "path": "/fine-on-fire/feedback-dont-agree",
        "md": "We ask for feedback about our work, and sometimes we'll get it, but...\n\nThey're suggesting a change that doesn't match how we work best.\n\nThey're saying something we did or said is a problem, but it's normal! Everyone does this! No one has ever complained!\n\n**Wait; don't argue.** It's awkward & _risky_ to give feedback to a lead or manager.\n\nThe problem might not be exactly what they're saying, or we're not seeing it clearly yet, but there's _definitely something important here._\n\n## Take notes now & process later\n\n> I'm not sure I get it fully, yet; I'm going to write this down, so I can think it through properly after the call; is that okay?\n>\n> That means I'm not doing anything useful yet; but we can pick it up again (choose day/time)\n\nWays to clarify:\n\n- (For a suggested change:) what are the issues that this is fixing?\n- Is there a recent specific example on your mind?\n- How often does this happen (in real terms)? E.g. times per day/week\n- What's the cost / fallout? Not just concrete (wasted time, missed communication) but also energy/emotional (angry, frustrated, demotivated, anxious), and for how long?\n- Who else is affected?\n\nEmotional reactions are individual, so \"that wouldn't bother me\" isn't relevant at all.\n\nIntent also isn't relevant (though it's nice to know).\n\nWe just need to find out what's happening, or what they think can be better, and why.\n\n## Good feedback that's not delivered perfectly is still good\n\nSometimes people might overstate a problem, because their quieter complaints were ignored (here or elsewhere).\n\nSometimes they'll shrink it: \"oh, this isn't a big deal; and it probably isn't what you meant, but...\"\n\nSometimes they'll get some details wrong, but the _rest_ of the complaint is valid.\n\nExtract the valuable parts; we're not building a defense, we're collaborating & merging ideas to get better.\n\n## Follow up clearly & collaborate\n\nThe first step is _figuring out_ options, including the not-very-good options (which might include: \"do nothing for now; check back next 1-on-1\").\n\nOnce we have a map (and have both shared the context we see), we can decide together what path to take.\n"
      },
      {
        "name": "Overreacting or defensiveness (or other trauma signs)",
        "path": "/fine-on-fire/overreacting-or-defensive",
        "md": "Sometimes people react with strong emotions (or... go silent & hide them) in the face of what seem like minor negative interactions.\n\nThere's a project setback, a mistake to be fixed, a higher-up is critical of something.\n\nIf someone's reaction just isn't what I expected at all, then probably they're seeing patterns that led to serious problems in the past.\n\n(I can also ask if there's anything happening that stresses them out, if I'm not sure).\n\n## The details aren't my business\n\nIt's important to talk about the interaction (and negative side-effects), and find out how to improve things, but maybe **not** good to probe into their actual history & the reasons.\n\n> It looked like you were pretty upset this morning, and that seemed worth talking about. That shouldn't be a normal experience at work.\n>\n> I have some sense of this; I've had bad experiences in past jobs, or going on outside of work, and can get into a conversation now where it just **feels** awful, because of that history.\n>\n> Listen, details of your history of life outside work are none of my business.\n>\n> But maybe we can find a way to stop that happening.\n\n## I'm not a therapist\n\nEven if I had that training (I do not) that's still not a good role for a manager to fill.\n\nKnowing all about their private struggles means I have to be 100% sure that won't bias me in some way (could I feel overprotective, and also ...assume they're not ready for a promotion?).\n\nIt's better to focus on direct support (plus whatever extra support the company offers).\n\n## Collaborate to help, not \"fix\" it for them\n\nEspecially if our reactions were really different, intervening (\"I talked to X directly about this for you!\") might not be at all what they want; gotta find out.\n\nWe can collaborate on what to do; they need to be in the loop (and the ideal for minor communication issues is to make sure they know they're supported, and let them handle corrective conversations on their own).\n"
      },
      {
        "name": "We're just not going fast enough",
        "path": "/fine-on-fire/we-are-not-fast-enough",
        "md": "This is a crucial topic when the team is struggling and deadlines are looming.\n\nThere are so many bad paths to take, and some of them will do serious damage to team members, the company as a whole, or (probably) both.\n\nLess experienced devs still have awful habits left over from school; _burn everything_ and fall over the finish line, then crash. Or they may think bosses will only assign them reasonable tasks, so either they _must_ succeed to prove themselves, or they will fail out of adult life.\n\nOthers will just check out. \"There's no way we'll make this deadline... typical. I'm going to just do the minimum, and ignore whatever the bosses feel like shouting about today; there's no point.\"\n\n## What's a healthier mental model?\n\nWhether the deadlines are impossible or even _too_ easy & safe, a team still optimizes in the same way:\n\n* Team well-being & good mental health is first. We need our brains for quality work, and brains do not function well in flaming wreckage.\n* Everyone on the team knows what actual value we're creating\n* We experiment & make changes to avoid burning away our energy on anything **else**, like work politics, lost focus, bad communication.\n\nIf we're motivated & focused after hearing from the CEO about how crucial this project is, let's get her vision updates in a few weeks.\n\nIf we're discouraged & panicked after hearing from the CEO about how crucial this project is, let's NOT do that; we can stay informed some other way.\n\nIf we're oblivious to whether we'll hit a deadline or not, let's front-load riskier work, invest some time in partial estimates, and make sure it's known.\n\nDoes it work well to have semi-weekly showcases, where we tour through our progress? Or does it ...not really speed us up, and just takes too long to prep?\n\nIf we're dragging because no one on the team has deep experience in a required tech, let's find out our options. Training, help internally or from a consultant, increased timeline for deep dives, hiring?\n\n...All of these need us to be alert, aware, and communicating well. The answers will vary for different teams.\n\n**Deadlines do not change how an effective team operates.** They can be motivational and focus work. They can also guide decisions around technical debt; it can be fine to alternate focused delivery periods with more exploratory and/or refactoring-focused periods.\n\nBut in the end, it's still up to the team to work in a sustainable & effective way."
      }
    ]
  },
  {
    "title": "Something has to change",
    "slug": "something-has-to-change",
    "topics": [
      {
        "name": "This person takes all my energy",
        "path": "/something-has-to-change/a-lot-of-work",
        "md": "Sometimes people are productive, but only with far more attention & energy than anyone else.\n\nThey seem to need constant guidance, or they want to spend hours complaining about things or people, or they escalate disputes until someone else intervenes, or they go down rabbit holes until someone pulls them out.\n\nIf we keep doing this work, we have little energy left for anything & anyone else.\n\n## Concrete data helps\n\nThey need some grounded context on what's happening, so it's possible to work on it.\n\nIf I'm irritated or frustrated, it's important to set that aside to **have** this conversation, but that's also part of the context.\n\n- Interventions that are pretty easy have a time cost\n- If they're _also_ unpleasant or difficult, that has a **time + energy** cost\n\nOften the energy cost is a much bigger problem.\n\n> Here's what I see happening; you can fill in pieces I'm missing.\n>\n> Someone mentions an technical choice but you see a problem. You give the downsides in a very strong way, though.\n>\n> Then when they try to rebalance this or seem defensive, you escalate; eventually I have to come running and defuse everything.\n>\n> Everyone is upset; you too, right? We've all lost half an hour, and defusing these things really burns me out... I have to drop everything and then try to unpick it all & redirect, then we end up having separate calls to calm everything down and somehow delicately make the original decision.\n>\n> We need a path here that feels like normal collaboration, and doesn't force me to jump in.\n\n## I expose the problem; you own the fix\n\nI've read a lot about time & focus management, communication style, and so on. I can share resources & suggestions!\n\nFinding the approach that works is up to them.\n\nI can also (still) help with minor interventions; that's fine! I also want to know if I'm ever making things harder.\n\n## New habits & skills aren't fast, but they work\n\nChanging habits is slow, but possible, especially with enough collaboration to keep each other on track long-term.\n\nPerfection isn't the goal, just making sure the results in the real world are good enough.\n"
      },
      {
        "name": "Angry, impatient, sarcastic, pessimistic, condescending...",
        "path": "/something-has-to-change/angry-impatient-sarcastic",
        "md": "What do we do when a team member is too negative, and it's affecting the team?\n\nFirst, anything sexist, racist, etc.; or sex-related comments are a problem. Even as jokes; even if everyone laughs. It's never 100% clear who's cringing silently.\n\nBut in less clear situations, we can talk to people & check for real impact; there's a lot of cultural variance, and friendly insults (among actual friends) or exaggerated pessimism may not actually be a problem.\n\nThis is partly a question of team composition, and what personalities mesh well.\n\n## Psychological safety\n\nAny comments that undercut psychological safety & engagement are a problem.\n\n(Reference to psychological safety & effective teams, and Google's research here)\n\n\"Have a thick skin\" is not a requirement for a developer role.\n\n\"Can accept any critique, even if it's worded badly\" is valuable, but also not required (and not always possible).\n\nWe **do** all need the skills to:\n\n- Avoid escalating disagreements into personal attacks\n- Value & work on holding our team to a high standard without attacking & undermining each other\n\nHuman mistakes are inevitable, and it's not helpful to just **try harder** to be perfect because you're frightened of public shaming.\n\nInstead, we want to keep evolving our systems & processes to keep us steady:\n\n- Map out work before starting and highlight risks (and get diverse input)\n- Design good tests & observability in CI, CD and live code\n- Keep complexity low and all APIs clean. Flag & refactor unstable areas.\n- Review early & often -- a solo developer opening a large PR with changes one one has seen yet is an antipattern.\n\n## How to talk about it\n\n> I'll tell you what I'm seeing, and you let me know your point of view.  \n>  \n> I think your motivation for pushing here is good; you want us to write good code.  \n> So what I want to talk about is how we can get that result, but minimize upsetting people along the way.\n\nSometimes they simply disagree with the best way to motivate people & keep work quality high!\n\nThat's fine; still many paths open:\n\n- Let's set the bar for quality together; we can agree on this as a team, and then if the \"kinder\" paths aren't working, you'll have a stronger argument.\n- I have studies, articles & books to suggest.\n- It's also possible you'll just be happier in a different company's culture; if that's true, then just follow our rules while you're here, and I can definitely help you out finding a new role elsewhere.\n"
      },
      {
        "name": "Inappropriate comments or actions; personal attacks or slurs",
        "path": "/something-has-to-change/bad-behavior",
        "md": "There are some cases where the slow & steady path, improving step-by-step and building new habits, just doesn't work.\n\nOne major exception is when there are other team members being harmed.\n\nHow much they're harmed is not always obvious. Some people can brush off aggression or advances and be relatively unbothered.\n\nOthers will **act** unbothered but are shaking & panicked in private, and rushing to find a way out of the company or the entire industry. Or just... exhausted, because they've been in dozens of similar situations already.\n\nTheir personal history is none of our business, really. They do not have to explain it & laboriously educate us.\n\nWe just need an environment that's safe for everyone.\n\n## Good company policy helps\n\nIf there's already a clear policy (including penalties) and training, that's ideal and makes this all much simpler. Sometimes startups don't realize the value until there's a problem, though, and a good policy also doesn't help if anyone is permitted to ignore it.\n\n## Be ready with an instant reaction\n\nPeople come from many backgrounds; some of them may bring habits that are just not okay.\n\nIt's valuable to try to avoid attacking someone who makes a mistake (and kick them into self-defence mode), but someone needs to stop the mistake from continuing.\n\nIf no one says anything (even if there's a private response later), that establishes what's our company culture accepts, and overrides any policies.\n\nFiguring out the right thing to say on the fly is really hard (especially when a comment is mostly strange, unexpected, maybe misheard...); so be ready in advance.\n\n> Wait, what? That doesn't sound right. (Makes time to think of a more complete response as needed)  \n>  \n> I don't think that's is a good joke. Can we move on to \\_\\_\\_?  \n>  \n> We should stay away from comments about \\_\\_\\_.  \n>  \n> In a PM: hey, this maybe doesn't belong in a work chat: (link)\n\nAnyone can respond in the moment; but normally the direct manager follows up.\n\n## Discuss ASAP but calmly\n\nIt's okay if no one seemed offended; and there's no need for an angry debate or accusations; and we're on the same side: let's fix this now so there's no further damage to anyone.\n\nPeople make mistakes, and there are ways of interacting that are common in society, but not fine in a modern workplace.\n\nGenerally, people can close the gap without too much trouble, as long as they actually understand why it's important.\n\n> I wanted to talk about this right away, because it's dangerous territory.\n>\n> It shouldn't be a big deal as long as we can sort it out quickly.\n>\n> Company policy is strict, though, and this is quite different from technical or other work slip-ups.\n>  \n> (One option:) Okay, wait; it seems like we're both upset right now. Let's pick this up tomorrow morning. We do need to figure it out quickly.\n"
      },
      {
        "name": "Making mistakes",
        "path": "/something-has-to-change/making-mistakes",
        "md": "## I made a mistake\n\nThis is where we model how we want everyone on the team to handle mistakes, so we'd better not:\n\n- pretend it didn't happen or brush past it\n- ignore our part in it, or focus on blaming other people or situations\n- just \"try harder\": there are still root causes behind even \"I guess I forgot that step\", and we can make things safer\n\nInstead, we need to put in some thought, talk through the actual results/costs, and also collect ideas from the team about how to address root causes.\n\n2 main angles that can often be improved: reducing the damage when someone does make a similar mistake, and preventing it from happening in the first place.\n\n## They made a mistake\n\nIt might be tempting to highlight the mistake, deliver some kind of scolding, extract a promise that it won't happen again, and move on.\n\nWhat does that achieve, though, exactly?\n\nFeelings of guilt & anxiety about getting caught in future mistakes costs quite a lot of energy, and also doesn't actually work very well.\n\nThis person is already less likely to make this mistake again. But what's best **for the team** is to figure out how to make the future safer.\n\n> Let's say someone new joins the team tomorrow.\n>\n> What will happen if they do the same thing? Can we make it cost less?\n>\n> Or — is there a way to catch it before it happens?"
      },
      {
        "name": "Not advancing, or maybe slowing down",
        "path": "/something-has-to-change/not-growing",
        "md": "So, someone is doing their work, and it's... fine; but they don't seem to be hungry to advance.\n\nThey're not learning outside of work, they don't seem to be interested in a promotion or seeking new challenges.\n\nWhat can I do?\n\n## Maybe I don't have to do anything\n\nThanks to the Covid-19 pandemic, this is more obvious, but even in normal times, sometimes people's extra energy is needed elsewhere.\n\nIt's true: they're not going to have a breakthrough at work; they're not going to get a promotion or take on more responsibilities.\n\nThey may need extra time off; they may need a leave of absence entirely, or they may need to just keep moving and do the role they have.\n\nA business still has practical limits on support they can offer, _but_ it's also expensive to replace someone, both financially and in team morale: discuss with leadership & other managers to be consistent with what we can offer.\n\n## They do need clear communication\n\nIt's awful to tell someone who's burning out, who's struggling with a crumbling relationship or a sick toddler or hospitalized or dying family members that... surprise, they have **not** been doing the minimum, and now they are fired.\n\nThere needs to be a clear level at which yes, this is enough to keep going (and look forward to better times) vs. no, this will not be enough and your job is at risk.\n\nWe need to collaborate on keeping this clarity year-round, not just at review periods.\n\n## What if their work is really slipping?\n\nHere are the common paths:\n\n1. Realize after months that this person is now only doing maybe half of the minimum. The company has already lost that salary. We likely cannot save their job, and there's now strong pressure to get them out as soon as possible; the worst possible result for everyone.\n1. Realize after 2 weeks that someone's work quality has changed, and you have some worries; nothing has been lost yet, and we can start talking immediately about options — including how much flex the company allows.\n\nThere are a lot of possible options, if there's not already a painful cost (already lost productivity/salary) to account for.\n\n- Move to part-time or reduced hours\n- Change focus or even change roles (voluntary down-leveling)\n- Figure out better ways to use holiday or unpaid leave\n- Keep communication open while they hunt for different work without needing to panic\n- ...whatever other support the company can offer to get through: child or elder care support, counseling, coaching or training, etc.\n\n## How do I talk about this?\n\nIt may just come up in the usual catch-up. But maybe not: anyone who's worked in a more toxic environment may feel it's a risk to attract blame.\n\n> Is your work moving along okay, generally?\n>\n> Getting stuck anywhere, or is there anything causing problems in the team? Stuff outside work throwing you off?\n\nIf they've not brought it up:\n\n> I do have a few worries I want to go through; for right now, I just have a few notes.\n>\n> I figured we'd go through my notes together so I could get your perspective.\n>\n> There might not even be a problem at all; I'll just bring up worries whenever I have them, instead of waiting to see if oh, okay, we're in trouble.\n\nThen go through what I've noticed, leaving space for them to fill in their PoV as we go.\n\nIf there's a reason for a temporary change, and that's fine, then just take notes on what we expect to see, and explain that there are paths to try also, if this is not so short term.\n\n## Wrapping up\n\nBefore the end of the call, we need:\n\n- specific actions, written down (for both of us)\n- with timelines (also specifically what we'll review) that are fairly near-term\n\nIf we're both too optimistic about how long a rough patch will last — as we usually want to be — let's find that out quickly, and take another path that'll have a better chance of working.\n"
      },
      {
        "name": "Oh, no... I've seen this before",
        "path": "/something-has-to-change/seen-this-before",
        "md": "Our instincts are pretty sharp about catching patterns that we've seen before.\n\nSomeone seems to be over-reacting to a mild critique, or being oddly secretive about their work, or not being honest about who did what.\n\nOnce we think we recognize a pattern, then lots of other clues start to point to the same conclusion.\n\nThis is a powerful tool for sniffing out problems, but it's common to leap to the wrong conclusion (and then get more & more convinced).\n\nIf multiple people are discuss someone else, they'll often reinforce that wrong idea even though there's no new info.\n\n## Get back to direct observation, and find a way to talk about it\n\nWhat's literally happening? How often? Do we have concrete details (if not: can we collect them from now on)?\n\nLog what we actually know, and focus on bad results, not just questionable decisions.\n\n> X's change caused this crash; X said on stand-up that they had no idea, but then quietly fixed it.\n>\n> There's a problem here with our tests not protecting us; that's first. We all code bugs sometimes.\n>\n> Fixing it was good; and the statement on standup didn't cause any new problems **except** that if we're not clear with each other, it wastes time & erodes trust.\n>\n> ...and there's some reason X felt unsafe admitting what had happened. I'll find out.\n\nMaybe the person who started stealing from the company 2 years ago seemed similar...\n\nThat's fine, this is a good reason to pay close attention, and collaborate well to restore trust (or uncover real, deeper problems & address them).\n\n> It's urgent to fix this quickly, because we had an absolute disaster with someone 2 years ago...  \n>  \n> So this particular thing is not a big deal; but it can make people panic, and we don't want that.  \n>  \n> Let's work through this case together really well, and let me know in private if you feel like a similar situation is coming up, and I'll help.  \n>  \n> It might help to do more pair work, because then you have two people involved when something goes wrong, plus a better chance of catching it early."
      },
      {
        "name": "We just don't agree on this",
        "path": "/something-has-to-change/we-dont-agree",
        "md": "No problem; every disagreement is a chance for us to get better at collaboration & making good choices (sometimes: good bets).\n\nIt's worth carefully steering intense disputes back to a shared discussion that's weighing importance, alternate paths, ease of changing course again, etc..\n\nPause if it feels personal, if someone will lose face if they back down.\n\n## Is this about the dev, and how they work?\n\nWell, they're the expert on them.\n\nIf they want to work in a way that (I think) isn't the best, but they're still not harming the team & meeting reqs for their role: okay.\n\n## About the team & shared process?\n\nWe have to choose together; it's important that the people who say their ideas the loudest don't just win out.\n\nIt's also important that a team lead or manager's opinion doesn't just override others' — let's just make sure we're structuring decisions well, and run options together as experiments.\n\nFeed input from 1-on-1s back into team discussions (giving credit!); and most people will \"disagree & commit\" to experiments where it's clear that we'll change course if it's not working as hoped.\n\n> Let's also weigh how this feels — if we have a process that works but it makes some of us miserable, that's still no good.\n\n## Technical path decisions\n\n> Let's look long-term: whatever we do, assume it has to be maintained by someone who hasn't even joined the team yet.\n>\n> Will this be easy to explain? Or will they have to learn something custom & unusual? How will they debug if something breaks in here?\n\n## Always follow-up\n\n\"Disagree and commit\" only works when everyone involves **trusts** that the follow-up will really happen.\n\nThat trust is easy to kill; experiments must be real, and we must change course if an experiment doesn't work.\n\n> Okay, let's go with this to start with, for the reasons listed, but:\n>\n> - This is a 2-week proof of concept spike only\n> - We expect to be able to do X and Y in under a second by the end of it...\n> - If we don't get there, or if we find other hard blockers early on, we drop this fast\n> - If we DO get there, we won't use the PoC code itself; we'll then build it properly with tests etc.\n>\n> Our fallback is still building a custom extension for Z, and then maintaining it long-term; let's see!\n>\n> Anything we've forgotten?\n\nThese are promises, and if we don't keep them strictly (or get to consensus on why our original criteria were off), this approach will be **far** harder next time.\n"
      },
      {
        "name": "I'm worried your work isn't at the level we need",
        "path": "/something-has-to-change/work-not-at-level",
        "md": "This is a hard one. Who feels comfortable telling someone that they're not good enough?\n\nThe important thing here is that this is **not** the judgement we have to make, anyway.\n\nThis is not an evaluation of the person, their worth, and not even of their ability to be a developer, generally.\n\nTo be really clear, I can't even say \"the work you're doing isn't enough\", just that what I'm seeing doesn't match up with what I think the team needs.\n\nThis sounds like it's splitting hairs, but it's important, because we're bad at guessing what other people are thinking.\n\nSo I need to be clear about:\n\n1. What I'm seeing (and how I'm checking it)\n1. Concrete expectations for this role (this should be clear across the organization, not criteria I'm inventing)\n1. (...discussion & filling in context)\n1. Possible paths & next steps\n\n## Some problems have nothing to do with work\n\nPersonal life struggles can overwhelm work in a way people may not even notice.\n\n> How stable is your life outside of work, right now?  \n> The details are none of my business, but if things are rough right now, we can coordinate to try to keep work really stable.\n\n## A good team and good developer can still be a poor match\n\nMaybe their work is great but their communication style keeps upsetting the rest of the team.\n\nMaybe they are incredibly detail-oriented & want everything just right, and the team needs to crank out many experiments, fast (and throw most of them away). Or vice versa.\n\nMaybe the product complexity has grown to a level where they're struggling to work safely.\n\nThese are all cases where there are many paths:\n\n- You may want to improve these skills\n- You can maybe change focus (or change teams) to work the way you prefer\n- The product itself may need arch refactoring and clean-up before more & more devs are forced to drop out\n- Or maybe it's time to start looking for roles elsewhere; and we can plan this out\n\n## Bring context & options, not threats or demands\n\nIf the conversations feels like a power or dominance struggle, that triggers all kind of instincts that will not help.\n\nA manager's job is not to tell team members what to do or keep them in line.\n\nIt's to support them so that, with the team, they can succeed & build good things.\n\nIf I see a problem, I share the context we see with them, they share their side, and then we collaborate to make sure things get better.\n\nIf I suggest one solution, but they say \"no, I really want to just do it this way, and we'll get the result we need\", that's fine.\n\nThey know themselves better than I do. I just need to confirm how we'll confirm.\n\n## Don't forget to leave space to think\n\nIt's highly stressful when work isn't going well. Many people don't give their best replies immediately in a worrying conversation.\n\n> Think about it, both the options we talked about and what I can do to help.  \n> If you have other ideas or suggestions, let me know! We'll make a concrete plan on Friday.\n"
      }
    ]
  }
]